[{"name": "app.py", "content": "import plotly.express as px\nfrom shinywidgets import render_plotly, output_widget, render_widget\nfrom shiny.express import input, ui, render\nfrom palmerpenguins import load_penguins\nimport seaborn as sns\nfrom shiny import render, reactive, req\n\nui.page_opts(title=\"Filling layout\", fillable=True)\n\n\npenguins = load_penguins()\n\nui.page_opts(title=\"Andrea's Penguin Playground\", fillable=False)\n\nwith ui.sidebar(open=\"open\"):\n    ui.h2(\"Sidebar\")\n\n    \n    ui.input_selectize(\"selected_x_attribute\",\"Select X Attribute\",\n                       [\"bill_length_mm\",\"bill_depth_mm\",\"flipper_length_mm\",\"body_mass_g\"])\n\n    ui.input_selectize(\"selected_y_attribute\",\"Select Y Attribute\",\n                       [\"bill_length_mm\",\"bill_depth_mm\",\"flipper_length_mm\",\"body_mass_g\"])\n    \n    ui.input_numeric(\"plotly_bin_count\",\"Ploty Bins\",10,min=1,max=20)\n    ui.input_slider(\"seaborn_bin_count\",\"Seaborn Bins\",1,20,10)\n\n    ui.input_checkbox_group(\"selected_island\",\"Select Island\",\n                      [\"Torgersen\",\"Dream\",\"Biscoe\"],\n                      selected=[\"Torgersen\",\"Dream\"],inline=False)\n                \n    \n    ui.input_checkbox_group(\"selected_species_list\",\"Choose Species\",\n                           [\"Adelie\", \"Gentoo\",\"Chinstrap\"],\n                           selected=[\"Adelie\",\"Gentoo\"],\n                           inline=False)\n    ui.hr()\n    ui.a(\"Andrea's Github\",href=\"https://github.com/andrea-shobe\", target=\"_blank\")\n\n\nwith ui.layout_columns():\n    with ui.card():\n        \"Penguins Data Table\"\n        @render.data_frame\n        def penguinstable_df():\n            return render.DataTable(filtered_data(),selection_mode='row')\n        \n\n    with ui.card():\n        \"Penguins Data Grid\"\n        @render.data_frame\n        def penguinsgrid_df():\n            return render.DataGrid(filtered_island(),selection_mode=\"row\")\n\n\nwith ui.layout_columns():\n    with ui.card():\n        @render.plot(alt=\"A Seaborn Histogram\")\n        def plot():\n            df=penguins\n            df[input.selected_x_attribute()].hist(grid=False)\n            plt=sns.histplot(data=filtered_data(),x=\"body_mass_g\",bins=input.seaborn_bin_count())\n            plt.set_title(\"Palmer Penguins\")\n            plt.set_xlabel(input.selected_x_attribute())\n            plt.set_ylabel(\"Count\")\n            return plt\n            \n    with ui.card():\n        \"Plotly Histogram\"\n        @render_plotly\n        def plotlyhistogram():\n            return px.histogram(filtered_data(),x=input.selected_x_attribute(),\n                               nbins=input.plotly_bin_count(), color=\"species\").update_layout(\n                xaxis_title=\"Bill Length (mm)\",\n                yaxis_title=\"Count\",)\n\nwith ui.card(full_screen=True):\n    ui.card_header(\"Plotly Scatterplot: Species\")\n    @render_plotly\n    def plotly_scatterplot():\n        return px.scatter(\n            data_frame=filtered_data(),\n            x=input.selected_x_attribute(),\n            y=input.selected_y_attribute(),\n            color=\"species\",\n            color_discrete_sequence=[\"red\",\"orange\",\"blue\"],\n            labels={\"body_mass_g\": \"Body Mass (g)\",\n                   \"bill_depth_mm\":\"Bill Depth (mm):\",\n                   \"flipper_length_mm\":\"Flipper Length (mm)\",\n                    \"bill_length_mm\":\"Bill Length (mm)\"},)\n\n@reactive.calc\ndef filtered_data():\n    req(input.selected_species_list())\n    isSpeciesMatch=penguins[\"species\"].isin(input.selected_species_list())\n    return penguins[isSpeciesMatch]\n\ndef filtered_island():\n    req(input.selected_island())\n    isIslandMatch=penguins[\"island\"].isin(input.selected_island())\n    return penguins[isIslandMatch]\n    \n    \n", "type": "text"}]